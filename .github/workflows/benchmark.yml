name: Benchmark

on:
    workflow_dispatch:
    push:

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  benchmark:
    name: Run benchmark
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        language:
          - "crystal"
          - "go"
          - "nodejs"
          - "php"
          - "python"
          - "ruby"
    env:
      ISHOCON_APP_LANG: ${{ matrix.language }}
      UNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
    steps:
      - name: Set env
        run: echo "DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - name: Replace base image in docker-compose.yml with github actor name
        run: |
          make change-lang
          sed -i 's/ishocon2-app-base/${{ env.UNAME }}\/ishocon2-app-base/g' ./docker-compose.yml
          sed -i 's/ishocon2-bench/${{ env.UNAME }}\/ishocon2-bench/g' ./docker-compose.yml
          sed -i 's/ishocon2-app-${{ env.ISHOCON_APP_LANG }}/${{ env.UNAME }}\/ishocon2-app-${{ env.ISHOCON_APP_LANG }}/g' ./docker-compose.yml
          cat ./docker-compose.yml
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.UNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Cache docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.language }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.language }}
            ${{ runner.os }}-buildx
      - name: Build and push bench image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ./docker/benchmarker/Dockerfile
          tags: ${{ env.UNAME }}/ishocon2-bench:${{ env.DATE }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          platforms: linux/amd64,linux/arm64/v8
      - name: Build and push base image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ./docker/app/base/Dockerfile
          tags: ${{ env.UNAME }}/ishocon2-app-base:${{ env.DATE }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          platforms: linux/amd64,linux/arm64/v8
      - name: Build and push app image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ./docker/app/${{ env.ISHOCON_APP_LANG }}/Dockerfile
          tags: ${{ env.UNAME }}/ishocon2-app-${{ env.ISHOCON_APP_LANG }}:${{ env.DATE }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          platforms: linux/amd64,linux/arm64/v8
      - run: make build
        timeout-minutes: 10
      - run: make up bench-with-db-init
        timeout-minutes: 10
      - name: Dump docker logs
        uses: jwalton/gh-docker-logs@v2
        if: ${{ always() }}
      - name: Move new cache to the place where to be cached
        run: |
          echo "Temporary fix for cleaning up old cache."
          echo "See isssues:
            - https://github.com/docker/build-push-action/issues/252
            - https://github.com/moby/buildkit/issues/1896
          "
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
